---
import Layout from '../layouts/Layout.astro';
import Form from '../components/Form.astro'
import Prompt from '../components/Prompt.astro'
import { actions } from 'astro:actions';

import { client } from '../utils/client';
import Logo from '../components/Logo.astro';


const {prompts} = await client.request(`query MyQuery {
  prompts(first: 1, orderBy: date_DESC) {
    body {
      html
    }
    title
    slug
    id
  }
}`)
const latestPrompt = prompts[0]
const result = Astro.getActionResult(actions.storySubmit);
if (result && !result.error) {
	const {data} = result;
	const {publishUserStory} = data
  return Astro.redirect(`/stories/${publishUserStory.id}`);
}
---

<Layout title="Welcome to Astro.">
	<main>
		
		<Prompt prompt={latestPrompt} />		

	</main>
</Layout>

<style is:global>
	

	h2 {
		font-size:1.5rem;
		font-weight: normal;
		margin-top:0;
	}
	
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
